import bcrypt from "bcryptjs";

/**
 * ğŸ”¹ Nettoie et formate un numÃ©ro de tÃ©lÃ©phone
 * - Supprime les espaces et les caractÃ¨res spÃ©ciaux inutiles
 * - Assure un format uniforme avant stockage ou utilisation
 */
export const formatPhoneNumber = (phone) => {
    return phone.replace(/\s+/g, "").trim();
};

/**
 * ğŸ”¹ GÃ©nÃ¨re un code OTP Ã  6 chiffres
 * - UtilisÃ© pour la validation des connexions et transactions
 */
export const generateOTP = () => {
    return Math.floor(100000 + Math.random() * 900000).toString();
};

/**
 * ğŸ”¹ GÃ©nÃ¨re un code PIN Ã  4 chiffres
 * - UtilisÃ© pour la sÃ©curitÃ© des transactions
 */
export const generatePIN = () => {
    return Math.floor(1000 + Math.random() * 9000).toString();
};

/**
 * ğŸ”¹ Hashage sÃ©curisÃ© des mots de passe et PIN
 * - Utilise bcrypt avec un sel pour un stockage sÃ©curisÃ©
 */
export const hashData = async (data) => {
    const salt = await bcrypt.genSalt(10);
    return await bcrypt.hash(data, salt);
};

/**
 * ğŸ”¹ VÃ©rifie si un PIN ou un mot de passe correspond Ã  son hash
 * - UtilisÃ© pour valider un PIN ou un mot de passe lors d'une connexion
 */
export const verifyHash = async (enteredData, hashedData) => {
    return await bcrypt.compare(enteredData, hashedData);
};
