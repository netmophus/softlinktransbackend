

// import mongoose from "mongoose";

// const CashRegisterSchema = new mongoose.Schema({
//   registerNumber: { type: String, unique: true, required: true }, // ğŸ”¹ Identifiant unique de la caisse
//   cashier: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true }, // ğŸ”¹ Caissier concernÃ©
//   supervisor: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true }, // ğŸ”¹ Superviseur qui gÃ¨re la caisse
//   initialBalance: { type: Number, required: true }, // ğŸ”¹ Solde initial du caissier
//   openingAmount: { type: Number, required: true }, // ğŸ”¹ Montant mis Ã  disposition au dÃ©but
//   closingAmount: { type: Number, default: 0 }, // ğŸ”¹ Montant final Ã  la fermeture
//   currentBalance: { type: Number, required: true }, // ğŸ”¹ âœ… Solde actuel qui Ã©volue selon les transactions
//   discrepancy: { type: Number, default: 0 }, // ğŸ”¹ Ã‰cart Ã©ventuel
//   justification: { type: String, default: "" }, // ğŸ”¹ Justification obligatoire si Ã©cart
//   status: { type: String, enum: ["open", "closed"], default: "open" }, // ğŸ”¹ Statut de la caisse
//   closingVerified: { type: Boolean, default: false }, // ğŸ”¹ Indique si la fermeture a Ã©tÃ© validÃ©e
//   reopened: { type: Boolean, default: false }, // ğŸ”¹ Indique si la caisse a Ã©tÃ© rÃ©ouverte
//   reopenReason: { type: String, default: "" }, // ğŸ”¹ Justification en cas de rÃ©ouverture
  
//   transactions: [
//     {
//       type: { type: String, enum: ["deposit", "withdrawal", "adjustment"], required: true }, // ğŸ”¹ Type dâ€™opÃ©ration
//       amount: { type: Number, required: true }, // ğŸ”¹ Montant de lâ€™opÃ©ration
//       performedBy: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true }, // ğŸ”¹ Qui a fait l'opÃ©ration
//       date: { type: Date, default: Date.now },
//     },
//   ],
//   isActive: { type: Boolean, default: true },

//   openedAt: { type: Date, default: Date.now }, // ğŸ”¹ Date dâ€™ouverture
//   closedAt: { type: Date }, // ğŸ”¹ Date de fermeture
// });

// export default mongoose.model("CashRegister", CashRegisterSchema);





import mongoose from "mongoose";

const CashRegisterSchema = new mongoose.Schema({
  registerNumber: { type: String, unique: true, required: true },
  cashier: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  supervisor: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  initialBalance: { type: Number, required: true },
  openingAmount: { type: Number, required: true },
  closingAmount: { type: Number, default: 0 },
  currentBalance: { type: Number, required: true },
  discrepancy: { type: Number, default: 0 },
  justification: { type: String, default: "" },
  status: { type: String, enum: ["open", "closed"], default: "open" },
  closingVerified: { type: Boolean, default: false },
  reopened: { type: Boolean, default: false },
  reopenReason: { type: String, default: "" },
  isActive: { type: Boolean, default: true },
  openedAt: { type: Date, default: Date.now },
  closedAt: { type: Date },

  
  // ğŸ”¹ Ajout pour suivre les commissions d'envoi perÃ§ues
  totalCommission: { type: Number, default: 0 },
});

export default mongoose.model("CashRegister", CashRegisterSchema);
